{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programing\\\\SpotifyAPP\\\\frontend\\\\src\\\\components\\\\content\\\\Content.js\";\nimport React from 'react';\nimport SpotifyWebApi from 'spotify-web-api-js';\nconst spotifyApi = new SpotifyWebApi();\nexport default class Content extends React.Component {\n  constructor() {\n    super();\n    const params = this.getHashParams();\n    console.log(params);\n    const token = params.access_token;\n    console.log(token);\n\n    if (token) {\n      spotifyApi.setAccessToken(token);\n    }\n\n    this.state = {\n      loggedIn: token ? true : false,\n      nowPlaying: {\n        name: 'Not checked',\n        artists: '',\n        image: ''\n      }\n    };\n  }\n\n  componentDidMount() {\n    console.log(setInterval(this.getNowPlaying(), 2000));\n  }\n\n  getHashParams() {\n    var hashParams = {};\n    var e,\n        r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n    e = r.exec(q);\n\n    while (e) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n      e = r.exec(q);\n    }\n\n    return hashParams;\n  }\n\n  getNowPlaying() {\n    setspotifyApi.getMyCurrentPlaybackState().then(response => {\n      console.log(response);\n      this.setState({\n        nowPlaying: {\n          name: response.item.name,\n          image: response.item.album.images[0].url,\n          artists: response.item.artists.map(item => {\n            return item.name;\n          }).join(', ')\n        }\n      });\n    }).catch(err => console.log(err));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, this.state.loggedIn ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"nowPlaying-root\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 20\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"nowPlaying-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }\n    }, this.state.nowPlaying.name)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"nowPlaying-artists\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }\n    }, this.state.nowPlaying.artists)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"nowPlaying-image\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.nowPlaying.image,\n      style: {\n        height: 150\n      },\n      alt: \"Album Cover\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }\n    })), this.state.loggedIn && /*#__PURE__*/React.createElement(\"button\", {\n      className: \"nowPlaying-checkButton\",\n      onClick: () => this.getNowPlaying(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    }, \"Check Now Playing\")) : /*#__PURE__*/React.createElement(\"a\", {\n      href: \"http://localhost:8888/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 20\n      }\n    }, \" Login to Spotify \"));\n  }\n\n}","map":{"version":3,"sources":["D:/Programing/SpotifyAPP/frontend/src/components/content/Content.js"],"names":["React","SpotifyWebApi","spotifyApi","Content","Component","constructor","params","getHashParams","console","log","token","access_token","setAccessToken","state","loggedIn","nowPlaying","name","artists","image","componentDidMount","setInterval","getNowPlaying","hashParams","e","r","q","window","location","hash","substring","exec","decodeURIComponent","setspotifyApi","getMyCurrentPlaybackState","then","response","setState","item","album","images","url","map","join","catch","err","render","height"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nimport SpotifyWebApi from 'spotify-web-api-js';\r\nconst spotifyApi = new SpotifyWebApi();\r\n\r\nexport default class Content extends React.Component {\r\n    constructor() {\r\n        super();\r\n        const params = this.getHashParams();\r\n\r\n        console.log(params);\r\n\r\n        const token = params.access_token;\r\n\r\n        console.log(token);\r\n\r\n        if (token) {\r\n            spotifyApi.setAccessToken(token);\r\n        }\r\n            \r\n        this.state = {\r\n            loggedIn: token ? true : false,\r\n            nowPlaying: {\r\n                name: 'Not checked',\r\n                artists: '',\r\n                image: '',\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(setInterval(this.getNowPlaying(), 2000));\r\n    }\r\n\r\n    getHashParams() {\r\n        var hashParams = {};\r\n        var e, r = /([^&;=]+)=?([^&;]*)/g,\r\n            q = window.location.hash.substring(1);\r\n        e = r.exec(q)\r\n        while (e) {\r\n           hashParams[e[1]] = decodeURIComponent(e[2]);\r\n           e = r.exec(q);\r\n        }\r\n        return hashParams;\r\n    }\r\n\r\n    getNowPlaying(){\r\n        setspotifyApi.getMyCurrentPlaybackState()\r\n        .then((response) => {\r\n            console.log(response);\r\n            this.setState({\r\n                nowPlaying: { \r\n                    name: response.item.name, \r\n                    image: response.item.album.images[0].url,\r\n                    artists: response.item.artists.map((item) => {\r\n                        return item.name\r\n                    }).join(', ')\r\n                }\r\n            });\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n    \r\n\r\n    render() {\r\n        return(\r\n            <div className='content'>\r\n                {this.state.loggedIn \r\n                ? (<div className='nowPlaying-root'>\r\n                    <div className='nowPlaying-name'>\r\n                        <p>{ this.state.nowPlaying.name }</p>\r\n                    </div>\r\n                    <div className='nowPlaying-artists'>\r\n                        <p>{ this.state.nowPlaying.artists }</p>\r\n                    </div>\r\n                    <div className='nowPlaying-image'>\r\n                        <img src={ this.state.nowPlaying.image } style={{ height: 150 }} alt='Album Cover'/>\r\n                    </div>\r\n                    { this.state.loggedIn &&\r\n                    <button className='nowPlaying-checkButton' onClick={() => this.getNowPlaying()}>\r\n                        Check Now Playing\r\n                    </button>}\r\n                </div>)\r\n                : (<a href='http://localhost:8888/login' > Login to Spotify </a>)}\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}